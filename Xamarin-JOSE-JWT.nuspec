<?xml version="1.0"?>
<package >
  <metadata>
    <id>Xamarin.JOSE.JWT</id>
    <version>1.0.1</version>
    <title>Xamarin Jose JWT</title>
    <authors>Mitja Bombac</authors>
    <owners>Mitja Bombac</owners>
    <licenseUrl>https://raw.github.com/senzacionale/xamarin-jose-jwt/master/LICENSE</licenseUrl>
    <projectUrl>https://github.com/senzacionale/xamarin-jose-jwt</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <releaseNotes>RSA-OAEP-256 (using SHA-256 hash) added to match latest spec version.</releaseNotes>	
    <summary>Xamarin Ultimate Javascript Object Signing and Encryption (JOSE) and JSON Web Token (JWT) Implementation for .NET 4.0+ Minimallistic. Full suite of signature and encryption algorithms. JSON parsing agnostic. Library for generating, decoding and encryption of JSON Web Tokens. Build for Xamarin Assemblies (http://developer.xamarin.com/guides/android/under_the_hood/assemblies/)</summary>
    <description>Xamarin Javascript Object Signing and Encryption (JOSE) and JSON Web Token (JWT) Implementation for .NET 4.0+ 
	
Ultimate Javascript Object Signing and Encryption (JOSE) and JSON Web Token (JWT) Implementation for .NET 4.0+ Minimallistic. Full suite of signature and encryption algorithms.
Supports generating, decoding, encryption and compression of JSON Web Tokens. JSON parsing agnostic. 

Build for Xamarin Assemblies (http://developer.xamarin.com/guides/android/under_the_hood/assemblies/)

Supported algorithms

Signing:

- HMAC signatures with HS256, HS384 and HS512.
- ECDSA signatures with ES256, ES384 and ES512.
- RSASSA-PKCS1-V1_5 signatures with RS256, RS384 and RS512.
- RSASSA-PSS signatures (probabilistic signature scheme with appendix) with PS256, PS384 and PS512.
- NONE (unprotected) plain text algorithm without integrity protection

Encryption:

- RSAES OAEP 256 encryption with A128CBC-HS256, A192CBC-HS384, A256CBC-HS512, A128GCM, A192GCM, A256GCM
- RSAES OAEP encryption with A128CBC-HS256, A192CBC-HS384, A256CBC-HS512, A128GCM, A192GCM, A256GCM
- RSAES-PKCS1-V1_5 encryption with A128CBC-HS256, A192CBC-HS384, A256CBC-HS512, A128GCM, A192GCM, A256GCM
- Direct symmetric key encryption with pre-shared key A128CBC-HS256, A192CBC-HS384, A256CBC-HS512, A128GCM, A192GCM and A256GCM
- A128KW, A192KW, A256KW encryption with A128CBC-HS256, A192CBC-HS384, A256CBC-HS512, A128GCM, A192GCM and A256GCM
- A128GCMKW, A192GCMKW, A256GCMKW encryption with A128CBC-HS256, A192CBC-HS384, A256CBC-HS512, A128GCM, A192GCM and A256GCM
- ECDH-ES encryption with A128CBC-HS256, A128GCM, A192GCM, A256GCM
- ECDH-ES+A128KW, ECDH-ES+A192KW, ECDH-ES+A256KW encryption with A128CBC-HS256, A128GCM, A192GCM, A256GCM
- PBES2-HS256+A128KW, PBES2-HS384+A192KW, PBES2-HS512+A256KW with A128CBC-HS256, A192CBC-HS384, A256CBC-HS512, A128GCM, A192GCM, A256GCM

Compression:

- DEFLATE compression
    </description>
    <copyright>Copyright senzacionale 2015</copyright>
    <language>en-US</language>
    <tags>jose jwt json jwa jwe jws aes cbc gcm rsa hmac sha rsassa pss rsaes oaep pkcs1-v1_5 es elliptic curve diffe hellman agreement ecdsa key wrap kw ecdh pbes pbes2 pbkdf pbkdf2 password based encryption javascript object signing</tags>
  </metadata>
</package>